{"ast":null,"code":"import _slicedToArray from\"/home/gaurav/Desktop/expense-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{GlobalContext}from'../context/GlobalState';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AddTransaction=function AddTransaction(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;var onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={id:Math.floor(Math.random()*100000000),text:text,amount:+amount};addTransaction(newTransaction);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",input:text,onChange:function onChange(e){return setText(e.target.value);},placeholder:\"Enter text...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[\"Amount\",/*#__PURE__*/_jsx(\"br\",{}),\"(negative - expense, positive - income)\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",input:amount,onChange:function onChange(e){return setAmount(e.target.value);},placeholder:\"Enter amount...\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Add transaction\"})]})]});};export default AddTransaction;","map":{"version":3,"sources":["/home/gaurav/Desktop/expense-tracker/src/Components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","text","setText","amount","setAmount","addTransaction","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,wBAA9B,C,6IAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACHH,QAAQ,CAAC,EAAD,CADL,wCACpBI,IADoB,eACdC,OADc,8BAECL,QAAQ,CAAC,CAAD,CAFT,yCAEpBM,MAFoB,eAEZC,SAFY,+BAIAN,UAAU,CAACC,aAAD,CAJV,CAInBM,cAJmB,aAInBA,cAJmB,CAM3B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACpBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,SAA3B,CADiB,CAErBZ,IAAI,CAAJA,IAFqB,CAGrBE,MAAM,CAAE,CAACA,MAHY,CAAvB,CAMAE,cAAc,CAACI,cAAD,CAAd,CACD,CAVD,CAWA,mBACE,wCACE,2CADF,cAEE,cAAM,QAAQ,CAAEH,QAAhB,wBACE,aAAK,SAAS,CAAC,cAAf,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEL,IAA1B,CAAgC,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAd,EAA1C,CAA0E,WAAW,CAAC,eAAtF,EAFF,GADF,cAKE,aAAK,SAAS,CAAC,cAAf,wBACE,eAAO,OAAO,CAAC,QAAf,iCAEE,aAFF,6CADF,cAME,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAEZ,MAA5B,CAAoC,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,SAAS,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAAhB,EAA9C,CAAgF,WAAW,CAAC,iBAA5F,EANF,GALF,cAaE,eAAQ,SAAS,CAAC,KAAlB,6BAbF,GAFF,GADF,CAoBD,CArCD,CAuCA,cAAef,CAAAA,cAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit} >\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" input={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount \n            <br />\n            (negative - expense, positive - income)\n          </label>\n          <input type=\"number\" input={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n\nexport default AddTransaction\n"]},"metadata":{},"sourceType":"module"}